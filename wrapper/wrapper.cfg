MEMORY {
	ZEROPAGE: start = $0000, size =  $0C0, type = rw, file = "";
	ZEROPGMG: start = $00C0, size =  $030, type = rw, file = "";
	ZEROPGFS: start = $00F0, size =  $010, type = rw, file = "";
	STACK:    start = $0100, size =  $100, type = rw, file = "";
	RAM:      start = $0200, size =  $600, type = rw, file = "";
	WRAM:     start = $6000, size = $2000, type = rw, file = "";

	HEADER:   start = $0000, size =   $10, type = ro, file = %O, fill = yes, fillval = 0;

	# 16k swappable banks at $8000
	PRG00:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $00;
	PRG01:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $01;
	PRG02:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $02;
	PRG03:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $03;
	PRG04:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $04;
	PRG05:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $05;
	PRG06:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $06;
	PRG07:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $07;
	PRG08:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $08;
	PRG09:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $09;
	PRG0A:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $0A;
	PRG0B:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $0B;
	PRG0C:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $0C;
	PRG0D:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $0D;
	PRG0E:    start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $0E;

	# 16k fixed bank at $C000
	PRGFX:    start = $C000, size = $4000, type = ro, file = %O, fill = yes, fillval = 0, bank = $0F;
}

SEGMENTS {
	ZEROPAGE: load = ZEROPAGE, type = zp;
	ZEROPGMG: load = ZEROPGMG, type = zp, optional = yes;
	ZEROPGFS: load = ZEROPGFS, type = zp;
	STACK:    load = STACK, type = bss,               optional = yes;
	OAM:      load = RAM,   type = bss, align = $100, optional = yes;
	RAM:      load = RAM,   type = bss, align = $100, optional = yes, define = yes;
	RAMFS:    load = RAM,   type = bss,               optional = yes;
	BSS:      load = RAM,   type = bss,               optional = yes, define = yes;
	WRAM:     load = WRAM,  type = bss, align = $100, optional = yes, define = yes;

	HEADER:   load = HEADER, type = ro;

	ALIGN:    load = PRGFX, type = ro, align = $100, optional = yes;
	FIXED:    load = PRGFX, type = ro,               optional = yes;
	RODATA:   load = PRGFX, type = ro,               optional = yes; # cc65 library only
	CODE:     load = PRGFX, type = ro,               optional = yes; # cc65 library only
	STARTUP:  load = PRGFX, type = ro, start = $FFEE;
	VECTORS:  load = PRGFX, type = ro, start = $FFFA;

	AUDIO:    load = PRG0D, type = ro, optional = yes;
	DEBUG:    load = PRG0E, type = ro, optional = yes;

	# Minigames, right now only 1...
	MINIGAME1:	load = PRG03, type = ro, optional = yes;
}
